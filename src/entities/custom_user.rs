//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "custom_user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_uuid: String,
    pub nick_name: String,
    pub user_name: String,
    pub user_pwd: String,
    pub email: Option<String>,
    pub user_status: u32,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub balance_usdt: u64,
    pub registration_date: DateTime,
    pub avatar_path: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::custom_recharge::Entity")]
    CustomRechargeRecords,
}

impl Related<super::custom_recharge::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CustomRechargeRecords.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
